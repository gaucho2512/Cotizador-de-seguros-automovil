{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Documents\\\\REACT\\\\Curso React Juan de la Torre Valdez\\\\cotizador-de-seguros-automovil\\\\src\\\\context\\\\CotizadorProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { obtenerDiferenciaYear, calcularMarca, calcularPlan, formatearDinero } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CotizadorContext = /*#__PURE__*/createContext();\n\nconst CotizadorProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [error, setError] = useState(\"\");\n  const [datos, setDatos] = useState({\n    marca: \"\",\n    year: \"\",\n    plan: \"\"\n  });\n\n  const handleChangeDatos = e => {\n    setDatos({ ...datos,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const cotizarSeguro = () => {\n    // base\n    let resultado = 2000; // obtener diferencia de a単o\n\n    const diferencia = obtenerDiferenciaYear(datos.year); // hay ue restar el 3% por cada a単o\n\n    resultado -= diferencia * 3 * resultado / 100; // europeo 30%\n    // americano 15%\n    // asiatico 5%\n\n    resultado *= calcularMarca(datos.marca); //completo 50%\n    //basico 20%\n\n    resultado *= calcularPlan(datos.plan); //formatear dinero\n\n    resultado = formatearDinero(resultado);\n    console.log(resultado);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CotizadorContext.Provider, {\n    value: {\n      handleChangeDatos,\n      datos,\n      error,\n      setError,\n      cotizarSeguro\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CotizadorProvider, \"QwNR1qeFi62K8zvAJGUvHhas9Vo=\");\n\n_c = CotizadorProvider;\nexport { CotizadorProvider };\nexport default CotizadorContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"CotizadorProvider\");","map":{"version":3,"sources":["C:/Users/Juan/Documents/REACT/Curso React Juan de la Torre Valdez/cotizador-de-seguros-automovil/src/context/CotizadorProvider.jsx"],"names":["createContext","useState","obtenerDiferenciaYear","calcularMarca","calcularPlan","formatearDinero","CotizadorContext","CotizadorProvider","children","error","setError","datos","setDatos","marca","year","plan","handleChangeDatos","e","target","name","value","cotizarSeguro","resultado","diferencia","console","log"],"mappings":";;;AAAA,SAASA,aAAT,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,qBAAT,EAAiCC,aAAjC,EAAiDC,YAAjD,EAAgEC,eAAhE,QAAuF,YAAvF;;AAEC,MAAMC,gBAAgB,gBAAGN,aAAa,EAAtC;;AAEA,MAAMO,iBAAiB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AAC/BY,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,IAAI,EAAE,EAFyB;AAG/BC,IAAAA,IAAI,EAAE;AAHyB,GAAD,CAAlC;;AAQA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC9BL,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAEL,OAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAkBF,CAAC,CAACC,MAAF,CAASE;AAFtB,KAAD,CAAR;AAIF,GALD;;AAOA,QAAMC,aAAa,GAAG,MAAM;AACzB;AACA,QAAIC,SAAS,GAAG,IAAhB,CAFyB,CAIzB;;AACC,UAAMC,UAAU,GAAGrB,qBAAqB,CAACS,KAAK,CAACG,IAAP,CAAxC,CALwB,CAOzB;;AACAQ,IAAAA,SAAS,IAAMC,UAAU,GAAE,CAAb,GAAkBD,SAAnB,GAAgC,GAA7C,CARyB,CAUzB;AACA;AACA;;AACAA,IAAAA,SAAS,IAAInB,aAAa,CAACQ,KAAK,CAACE,KAAP,CAA1B,CAbyB,CAgBxB;AACD;;AACAS,IAAAA,SAAS,IAAIlB,YAAY,CAACO,KAAK,CAACI,IAAP,CAAzB,CAlByB,CAqBzB;;AACAO,IAAAA,SAAS,GAAIjB,eAAe,CAACiB,SAAD,CAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEF,GAzBD;;AA4BC,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AACG,IAAA,KAAK,EAAE;AAEHN,MAAAA,iBAFG;AAGHL,MAAAA,KAHG;AAIHF,MAAAA,KAJG;AAKHC,MAAAA,QALG;AAMHW,MAAAA;AANG,KADV;AAAA,cAYQb;AAZR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/DD;;GAAMD,iB;;KAAAA,iB;AAkEN,SACIA,iBADJ;AAIA,eAAeD,gBAAf","sourcesContent":["import { createContext , useState } from \"react\";\r\nimport { obtenerDiferenciaYear , calcularMarca , calcularPlan , formatearDinero } from \"../helpers\";\r\n\r\n const CotizadorContext = createContext()\r\n\r\n const CotizadorProvider = ({children}) => {\r\n\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const [datos, setDatos] = useState({\r\n        marca: \"\",\r\n        year: \"\",\r\n        plan: \"\"\r\n    })\r\n\r\n\r\n\r\n    const handleChangeDatos = (e) => {\r\n       setDatos({\r\n           ...datos,\r\n           [e.target.name] : e.target.value\r\n       })\r\n    }\r\n\r\n    const cotizarSeguro = () => {\r\n       // base\r\n       let resultado = 2000\r\n\r\n       // obtener diferencia de a単o\r\n        const diferencia = obtenerDiferenciaYear(datos.year)\r\n\r\n       // hay ue restar el 3% por cada a単o\r\n       resultado -= ((diferencia *3) * resultado) / 100\r\n\r\n       // europeo 30%\r\n       // americano 15%\r\n       // asiatico 5%\r\n       resultado *= calcularMarca(datos.marca)\r\n\r\n\r\n        //completo 50%\r\n       //basico 20%\r\n       resultado *= calcularPlan(datos.plan)\r\n       \r\n\r\n       //formatear dinero\r\n       resultado =  formatearDinero(resultado)\r\n       console.log(resultado);\r\n    \r\n    }\r\n  \r\n\r\n     return (\r\n         <CotizadorContext.Provider\r\n            value={{\r\n              \r\n                handleChangeDatos,\r\n                datos,\r\n                error,\r\n                setError,\r\n                cotizarSeguro\r\n\r\n            }}\r\n            >\r\n            \r\n                {children}\r\n         </CotizadorContext.Provider>\r\n     )\r\n }\r\n\r\n\r\n export {\r\n     CotizadorProvider\r\n }\r\n\r\n export default CotizadorContext"]},"metadata":{},"sourceType":"module"}